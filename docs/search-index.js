var searchIndex = JSON.parse('{\
"tmx_utils":{"doc":"Mostly just an exploration of the Rust language and modern …","t":"AAOFFFFFF","n":["string_ext","test_utils","vec_string","format_list","format_list_slices","read_string","read_string_stdin","run_file_test","run_test"],"q":[[0,"tmx_utils"],[3,"tmx_utils::string_ext"],[7,"tmx_utils::test_utils"],[9,"alloc::string"],[10,"alloc::vec"],[11,"std::io::error"],[12,"core::result"],[13,"std::io"],[14,"core::ops::function"],[15,"core::panic::unwind_safe"]],"d":["String Extensions","Testing utilities","Declares a <code>Vec&lt;String&gt;</code> and casts string literals from <code>&amp;str</code> …","Formats a list of strings with commas and “and” if …","Formats a list of string slices with commas and “and” …","Reads a line from a reader and trims it. Returns io errors …","Reads a line from <code>std::io::stdin().lock()</code> and trims it. …","Runs a test on a File with a teardown function that is …","Runs a test with a teardown function that is guaranteed to …"],"i":[0,0,0,0,0,0,0,0,0],"f":[0,0,0,[[[2,[1]]],1],[[[2,[3]]],1],[-1,[[5,[1,4]]],6],[[],[[5,[1,4]]]],[[-1,3,3],7,[8,9]],[[-1,-2],7,[8,9],8]],"c":[],"p":[[3,"String",9],[3,"Vec",10],[15,"str"],[3,"Error",11],[4,"Result",12],[8,"BufRead",13],[15,"tuple"],[8,"FnOnce",14],[8,"UnwindSafe",15]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
