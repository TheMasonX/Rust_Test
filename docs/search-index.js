var searchIndex = JSON.parse('{\
"tmx_utils":{"doc":"Mostly just an exploration of the Rust language and modern …","t":"AAAOFFFFFFFFFFF","n":["math_utils","string_ext","test_utils","vec_string","clamp","clamp01","lerp","lerp_clamped","format_list","format_list_slices","read_local_file","read_string","read_string_stdin","run_file_test","run_test"],"q":[[0,"tmx_utils"],[4,"tmx_utils::math_utils"],[8,"tmx_utils::string_ext"],[13,"tmx_utils::test_utils"],[15,"core::cmp"],[16,"num_traits"],[17,"core::marker"],[18,"alloc::string"],[19,"std::io::error"],[20,"core::result"],[21,"std::io"],[22,"core::ops::function"],[23,"core::panic::unwind_safe"]],"d":["Math Utilities","String Extensions","Test Utilities","Declares a <code>Vec&lt;String&gt;</code> and casts string literals from <code>&amp;str</code> …","Clamps <code>val</code> between <code>min_val</code> and <code>max_val</code>.","Clamps <code>val</code> between 0 and 1. Had intended to use …","Linearly interpolates between <code>a</code> and <code>b</code> by <code>t</code>. Does NOT clamp …","Linearly interpolates between <code>a</code> and <code>b</code> by <code>t</code>. Clamps ‘t’ …","Formats a list of strings with commas and “and” if …","Formats a list of string slices with commas and “and” …","Reads a file from the current directory. Returns io errors …","Reads a line from a reader and trims it. Returns io errors …","Reads a line from <code>std::io::stdin().lock()</code> and trims it. …","Runs a test on a File with a teardown function that is …","Runs a test with a teardown function that is guaranteed to …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,[[-1,-1,-1],-1,[1,2]],[-1,-1,[1,2]],[[-1,-1,-1],-1,[2,3]],[[-1,-1,-1],-1,[1,2,3]],[[[5,[4]]],4],[[[5,[6]]],4],[6,[[8,[4,7]]]],[-1,[[8,[4,7]]],9],[[],[[8,[4,7]]]],[[-1,6,6],10,[11,12]],[[-1,-2],10,[11,12],11]],"c":[],"p":[[8,"PartialOrd",15],[8,"Num",16],[8,"Copy",17],[3,"String",18],[15,"slice"],[15,"str"],[3,"Error",19],[4,"Result",20],[8,"BufRead",21],[15,"tuple"],[8,"FnOnce",22],[8,"UnwindSafe",23]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
